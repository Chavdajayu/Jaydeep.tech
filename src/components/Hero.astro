---
import { siteConfig } from "../config";
---

<div
  id="hero"
  class="relative isolate overflow-hidden bg-white py-24 md:h-screen hide-native"
  style={`--accent-color: ${siteConfig.accentColor}`}
>
  <!-- (your gradient + svg background, unchanged) -->

  <div class="h-full mx-auto p-8 sm:p-12 md:p-24 flex items-center">
    <div>
      <h2 class="text-pretty text-xl sm:text-2xl md:text-5xl font-bold tracking-tight text-gray-700 animate-fade-in">
        Hello! ðŸ‘‹
      </h2>
      <h1 class="mt-6 sm:mt-8 md:mt-10 text-pretty text-4xl sm:text-5xl md:text-6xl lg:text-8xl font-bold tracking-tight text-gray-800 animate-fade-in animation-delay-200">
        I'm <span style={{ color: siteConfig.accentColor }}>{siteConfig.name}</span>
      </h1>
      <p class="mt-4 sm:mt-6 md:mt-8 text-pretty text-base sm:text-lg md:text-xl/8 font-medium text-gray-600 animate-fade-in animation-delay-400">
        {siteConfig.title}
      </p>
    </div>
  </div>

  <!-- social icons ... -->

  <!-- Cursor elements -->
  <div class="cursor-dot" id="cursorDot"></div>
  <div class="cursor-ring" id="cursorRing"></div>

  <!-- Glows only for hero -->
  <div class="cursor-glow glow-pink" id="glowPink"></div>
  <div class="cursor-glow glow-blue" id="glowBlue"></div>
  <div class="cursor-glow glow-purple" id="glowPurple"></div>
  
  
  <style>
    :root{
      --dot-size: 7px;
      --ring-size: 30px;
      --glow-size: 560px;
      --glow-blur: 65px;
    }
    
    .hide-native{ cursor:none; }
    
    .cursor-dot{
      position:fixed;
      width:var(--dot-size);
      height:var(--dot-size);
      border-radius:50%;
      background: red;
      box-shadow:0 0 10px orange;
      transform:translate(-50%,-50%);
      pointer-events:none;
      z-index:9999;
    }
    
    .cursor-ring{
      position:fixed;
    width:var(--ring-size);
    height:var(--ring-size);
    border-radius:50%;
    border:1.5px solid black;
    background: transparent;
    transform:translate(-50%,-50%);
    pointer-events:none;
    z-index:9999;
    transition:transform 0.1s ease-out, border-color .2s ease-out;
  }
  .cursor-ring.active{
    transform:translate(-50%,-50%) scale(1.3);
    border-color:rgba(99,102,241,0.6);
    transition:transform 1s ease-out, border-color .2s ease-out;
  }
  
  .cursor-glow{
    position:fixed;
    width:var(--glow-size);
    transition:transform 1s ease-out, border-color .2s ease-out;
    height:var(--glow-size);
    border-radius:50%;
    filter:blur(var(--glow-blur));
    opacity:0.70;
    transform:translate(-50%,-50%);
    pointer-events:none;
    mix-blend-mode:multiply;
    z-index:800;
  }
  .glow-pink{ background:rgb(255, 182, 193); }
  .glow-blue{ background:rgba(135,206,250,0.9); }
  .glow-purple{ background:rgba(186,85,211,0.9); }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const dot = document.getElementById("cursorDot");
    const ring = document.getElementById("cursorRing");
    const glowPink = document.getElementById("glowPink");
    const glowBlue = document.getElementById("glowBlue");
    const glowPurple = document.getElementById("glowPurple");
    const hero = document.getElementById("hero");
    
    if (!dot || !ring || !glowPink || !glowBlue || !glowPurple || !hero) return;
    
    // Mouse follows everywhere (dot + ring)
    let mouse = {x: window.innerWidth/2, y: window.innerHeight/2};
    let ringPos = {...mouse};
    
    // Glows track only inside Hero
    let pinkPos = {x: window.innerWidth/2, y: window.innerHeight - 200};
    let bluePos = {x: window.innerWidth/2, y: window.innerHeight - 200};
    let purplePos = {x: window.innerWidth/2, y: window.innerHeight - 200};
    
    const lerp = (a,b,n) => a + (b - a) * n;
    
    // Update mouse everywhere
    document.addEventListener("mousemove", e => {
      mouse.x = e.clientX;
      mouse.y = e.clientY;
      dot.style.transform = `translate(${mouse.x}px, ${mouse.y - 635}px) translate(-50%,-50%)`;
    });
    
    // Hover effects
    document.querySelectorAll("button,a").forEach(el=>{
      el.addEventListener("mouseenter", ()=> ring.classList.add("active"));
      el.addEventListener("mouseleave", ()=> ring.classList.remove("active"));
    });
    
    function animate(){
      // Ring always follows
      ringPos.x = lerp(ringPos.x, mouse.x, 0.18);
      ringPos.y = lerp(ringPos.y, mouse.y - 635, 0.18);
      ring.style.transform = `translate(${ringPos.x}px,${ringPos.y}px) translate(-50%,-50%)`;
      // body.style.cursor = "block";

      
      // Check if inside hero
      const heroRect = hero.getBoundingClientRect();
      const insideHero = heroRect.top <= 0 && heroRect.bottom >= 0;
      
      if (insideHero) {
        // Glows follow mouse
        pinkPos.x = lerp(pinkPos.x, mouse.x - 115, .18);
        pinkPos.y = lerp(pinkPos.y, mouse.y - 280, .38);
        glowPink.style.transform = `translate(${pinkPos.x - 105}px,${pinkPos.y - 500}px) translate(-50%,-50%)`;
        
        bluePos.x = lerp(bluePos.x, mouse.x + 245, .38);
        bluePos.y = lerp(bluePos.y, mouse.y - 550, .58);
        glowBlue.style.transform = `translate(${bluePos.x - 205}px,${bluePos.y - 350}px) translate(-50%,-50%)`;  
        
        purplePos.x = lerp(purplePos.x, mouse.x + 2, .48);
        purplePos.y = lerp(purplePos.y, mouse.y - 150, .68);
        glowPurple.style.transform = `translate(${purplePos.x - 5}px,${purplePos.y - 350}px) translate(-50%,-50%)`;
      } else {
        // Lock them at bottom center
        const lockX = window.innerWidth / 2;
        const lockY = window.innerHeight - 100;
        
        glowPink.style.transform = `translate(${lockX - 105}px, ${lockY}px) translate(-50%,-50%)`;
        glowBlue.style.transform = `translate(${lockX + 205}px, ${lockY}px) translate(-50%,-50%)`;
        glowPurple.style.transform = `translate(${lockX + 5}px, ${lockY}px) translate(-50%,-50%)`;
      }
      
      requestAnimationFrame(animate);
    }
    animate();
  });
</script>

</div>